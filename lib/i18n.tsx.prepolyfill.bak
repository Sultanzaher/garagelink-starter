
import React, { useEffect, useState } from 'react';
import * as Localization from 'expo-localization';
import i18n from 'i18next';
import { initReactI18next, I18nextProvider } from 'react-i18next';
import en from '../locales/en.json';
import ar from '../locales/ar.json';
import ur from '../locales/ur.json';

export function I18nProvider({ children }:{ children: React.ReactNode }) {
  const [ready, setReady] = useState(false);

  useEffect(() => {
    i18n
      .use(initReactI18next)
      .init({
        lng: (Localization.getLocales()[0]?.languageCode || 'en') as any,
        fallbackLng: 'en',
        resources: { en: { translation: en }, ar: { translation: ar }, ur: { translation: ur } },
        interpolation: { escapeValue: false }
      })
      .then(() => setReady(true));
  }, []);

  if (!ready) return null;
  return <I18nextProvider i18n={i18n}>{children}</I18nextProvider>;
}
